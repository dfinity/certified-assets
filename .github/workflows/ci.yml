name: Check and Test
on: push

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [ 1.58.1 ]

    steps:
      - uses: actions/checkout@v2
      - uses: fregante/setup-git-user@v1

      - name: Cache Cargo
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ matrix.build }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ matrix.build }}-cargo-

      - name: Install Rust
        run: |
          rustup update ${{ matrix.rust }} --no-self-update
          rustup default ${{ matrix.rust }}
          rustup component add rustfmt
          rustup component add clippy

      - name: Check Format
        run: cargo fmt --all -- --check

      - name: Clippy
        run: cargo clippy --tests --benches -- -D clippy::all

      - name: Test
        run: cargo test
        env:
          RUST_BACKTRACE: 1
          
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GH_PAT }}"
          automatic_release_tag: "latest"
          prerelease: false
          files: |
            .dfx/local/canisters/certified_assets/certified_assets.wasm
            .dfx/local/canisters/certified_assets/certified_assets.did
            
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GH_PAT }}"
          prerelease: true
          automatic_release_tag: "0.2.2"
          files: |
            .dfx/local/canisters/certified_assets/certified_assets.wasm
            .dfx/local/canisters/certified_assets/certified_assets.did
            
            
      - name: "Determine tag"
        run: "echo \"RELEASE_TAG=${GITHUB_REF#refs/tags/}\" >> $GITHUB_ENV"

      - name: "Create release"
        uses: "actions/github-script@v5"
        with:
          github-token: "${{ secrets.GH_PAT }}"
          script: |
            try {
              await github.rest.repos.createRelease({
                draft: false,
                generate_release_notes: true,
                name: process.env.RELEASE_TAG,
                owner: context.repo.owner,
                prerelease: false,
                repo: context.repo.repo,
                tag_name: process.env.RELEASE_TAG,
              });
            } catch (error) {
              core.setFailed(error.message);
            }
            
      - name: Create a Release
        uses: elgohr/Github-Release-Action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        with:
          title: MyReleaseMessage
          
      - uses: ncipollo/release-action@v1
        with:
          artifacts: ".dfx/local/canisters/certified_assets/certified_assets.did,.dfx/local/canisters/certified_assets/certified_assets.wasm"
          bodyFile: "README.md"
          token: ${{ secrets.GH_PAT }}
          
          
  # https://github.com/softprops/action-gh-release
