name: Check, Test, Build, Release
on:
  push:
    branches:
      - main
      
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [ 1.58.1 ]

    steps:
      - uses: actions/checkout@v2

      - name: Cache Cargo
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ matrix.build }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ matrix.build }}-cargo-
            
      - name: Install Rust
        run: |
          rustup update ${{ matrix.rust }} --no-self-update
          rustup default ${{ matrix.rust }}
          rustup component add rustfmt
          rustup component add clippy
          
      - name: Check Format
        run: cargo fmt --all -- --check

      - name: Clippy
        run: cargo clippy --tests --benches -- -D clippy::all

      - name: Test
        run: cargo test
        env:
          RUST_BACKTRACE: 1
   
      - name: Compute diff between local and upstream candid files
        run: |
          curl -s https://raw.githubusercontent.com/dfinity/cdk-rs/main/src/ic-certified-assets/assets.did > upstream_assets.did
          diff upstream_assets.did assets.did
          echo CANDID_DIFF_RC="$?" >> $GITHUB_ENV
          
      - name: Fail if local candid file different from upstream
        if: ${{ env.CANDID_DIFF != 0 }}
        uses: actions/github-script@v3
        with:
          script: |
              core.setFailed('Candid file for asset canister is different from upstream (dfinity/cdk-rs/ic-certified-assets)')

      - name: Build WASM
        run: |
          sh -ci "$(curl -fsSL https://smartcontracts.org/install.sh)"
          dfx start --clean --background 
          dfx deploy
          
      - name: Determine release version
        run: |
          echo RELEASE_VERSION=$(cargo metadata -q | jq '.packages | .[] | .version' | tr -d \") >> $GITHUB_ENV
      
      - name: Create release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: true
          automatic_release_tag: "${{ env.RELEASE_VERSION }}"
          files: |
            .dfx/local/canisters/certified_assets/certified_assets.wasm
            .dfx/local/canisters/certified_assets/certified_assets.did
